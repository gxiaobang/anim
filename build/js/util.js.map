{"version":3,"sources":["util.js"],"names":[],"mappings":";;;;;;;;;;;;AAMA,IAAM,OAAO,SAAP,IAAO,GAAM,EAAN;;AAEb,IAAM,QAAQ,SAAR,KAAQ,CAAC,IAAD,EAAU;AACvB,QAAO,KAAK,OAAL,CAAa,QAAb,EAAuB;SAAK,EAAE,MAAF,CAAS,CAAT,EAAY,WAAZ;EAAL,CAA9B,CADuB;CAAV;;;AAKd,IAAM,SAAS,SAAT,MAAS,CAAE,IAAF,EAA6B;KAArB,6DAAO,wBAAc;;AAC3C,QAAO,KAAK,gBAAL,CAAsB,IAAtB,CAAP,CAD2C;CAA7B;;;AAKf,IAAM,WAAW,SAAX,QAAW,CAAE,EAAF,EAAM,IAAN,EAAgB;;AAEhC,KAAI,OAAO,gBAAP,EAAyB;AAC5B,SAAO,OAAO,gBAAP,CAAyB,EAAzB,EAA6B,EAA7B,EAAmC,IAAnC,KAA6C,IAA7C,CADqB;;;AAA7B,MAIK;;AAEJ,OAAI,QAAQ,SAAR,EAAmB;AACtB,WAAO,CAAC,GAAG,OAAH,CAAW,KAAX,IAAoB,GAAG,OAAH,CAAW,kCAAX,CAApB,IAAsE,GAAtE,CAAD,GAA8E,GAA9E,CADe;IAAvB,MAGK;AACJ,WAAO,GAAG,YAAH,CAAiB,IAAjB,KAA2B,IAA3B,CADH;IAHL;GAND;CAFgB;;;AAkBjB,IAAM,WAAW,SAAX,QAAW,CAAE,EAAF,EAAM,IAAN,EAAY,KAAZ,EAAuB;AACvC,KAAI,QAAQ,EAAR,CADmC;AAEvC,KAAI,WAAU,MAAV,IAAoB,CAApB,IAAyB,OAAO,IAAP,IAAe,QAAf,EAAyB;AACrD,QAAO,IAAP,IAAgB,KAAhB,CADqD;EAAtD,MAGK;AACJ,UAAQ,IAAR,CADI;EAHL;;AAOA,MAAK,IAAI,KAAJ,IAAY,KAAjB,EAAwB;AACvB,MAAI,SAAQ,SAAR,EAAmB;AACtB,MAAG,KAAH,CAAS,OAAT,GAAmB,MAAO,KAAP,CAAnB,CADsB;AAEtB,MAAG,KAAH,CAAS,MAAT,GAAkB,kBAAmB,MAAO,KAAP,IAAgB,GAAhB,GAAuB,GAA1C,CAFI;GAAvB,MAIK,IAAI,MAAO,MAAM,KAAN,CAAP,CAAJ,EAA0B;AAC9B,MAAG,KAAH,CAAU,KAAV,IAAmB,MAAO,KAAP,CAAnB,CAD8B;GAA1B,MAGA;AACJ,MAAG,KAAH,CAAU,KAAV,IAAmB,MAAO,KAAP,IAAgB,IAAhB,CADf;GAHA;EALN;CATgB;;;AAwBjB,IAAM,cAAc,OAAO,qBAAP,IACb,OAAO,2BAAP,IACA,OAAO,wBAAP,IACA,OAAO,uBAAP,IACC;QAAM,WAAW,EAAX,EAAe,OAAO,EAAP;CAArB;;;AAGR,IAAM,UAAU,SAAV,OAAU,CAAC,KAAD,EAAQ,IAAR,EAAiB;AAChC,KAAI,WAAW,IAAX,CAAJ,EAAsB;AACrB,OAAK,IAAI,IAAI,CAAJ,EAAO,MAAM,MAAM,MAAN,EAAc,IAAI,GAAJ,EAAS,GAA7C,EAAkD;AACjD,OAAI,KAAK,MAAM,CAAN,CAAL,EAAe,CAAf,MAAsB,KAAtB,EAA6B,MAAjC;GADD;EADD;CADe;;;AAShB,IAAM,QAAQ,SAAR,KAAQ,CAAC,MAAD,EAAwB;mCAAZ;;EAAY;;AACrC,SAAQ,OAAR,EAAiB,UAAC,MAAD,EAAY;AAC5B,OAAK,IAAI,GAAJ,IAAW,MAAhB,EAAwB;AACvB,UAAQ,GAAR,IAAgB,OAAQ,GAAR,CAAhB,CADuB;GAAxB;EADgB,CAAjB,CADqC;AAMrC,QAAO,MAAP,CANqC;CAAxB;;QAUL;QAAQ;QAAU;QAAU;QAAO","file":"util.js","sourcesContent":["/**\r\n * util.js\r\n * 工具类\r\n * by bang\r\n */\r\n\r\nconst noop = () => {};\r\n\r\nconst named = (name) => {\r\n\treturn name.replace(/[-]\\w/g, a => a.charAt(1).toUpperCase());\r\n}\r\n\r\n// 获取dom节点\r\nconst getDOM = ( expr, root = document ) => {\r\n\treturn root.querySelectorAll(expr);\r\n};\r\n\r\n// 设置样式\r\nconst getStyle = ( el, name ) => {\r\n\t// 标准\r\n\tif (window.getComputedStyle) {\r\n\t\treturn window.getComputedStyle( el, '' )[ name ] || null;\r\n\t}\r\n\t// IE8-\r\n\telse {\r\n\t\t// 透明度\r\n\t\tif (name == 'opacity') {\r\n\t\t\treturn (el.filters.alpha || el.filters['DXImageTransform.Microsoft.Alpha'] || 100) / 100;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn el.currentStyle[ name ] || null;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 获取样式\r\nconst setStyle = ( el, name, value ) => {\r\n\tvar props = {};\r\n\tif (arguments.length == 3 && typeof name == 'string') {\r\n\t\tprops[ name ] = value;\r\n\t}\r\n\telse {\r\n\t\tprops = name;\r\n\t}\r\n\r\n\tfor (let name in props) {\r\n\t\tif (name == 'opacity') {\r\n\t\t\tel.style.opacity = props[ name ];\r\n\t\t\tel.style.filter = 'alpha(filter=' + (props[ name ] / 100) + ')';\r\n\t\t}\r\n\t\telse if (isNaN( props[name] )) {\r\n\t\t\tel.style[ name ] = props[ name ];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tel.style[ name ] = props[ name ] + 'px';\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 动画帧\r\nconst requestAnim = window.requestAnimationFrame || \r\n\t\t\t\t\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\t\t\t\t\twindow.mozRequestAnimationFrame  ||\r\n\t\t\t\t\t\t\twindow.msRequestAnimationFrame  ||\r\n\t\t\t\t\t\t\t(fn => setTimeout(fn, 1000 / 60));\r\n\r\n// 遍历类数组\r\nconst forEach = (array, func) => {\r\n\tif (isFunction(func)) {\r\n\t\tfor (var i = 0, len = array.length; i < len; i++) {\r\n\t\t\tif (func(array[i], i) === false) break;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 混合 类似于extend\r\nconst mixin = (target, ...sources) => {\r\n\tforEach(sources, (source) => {\r\n\t\tfor (let key in source) {\r\n\t\t\ttarget[ key ] = source[ key ];\r\n\t\t}\r\n\t});\r\n\treturn target;\r\n};\r\n\r\n\r\nexport { getDOM, getStyle, setStyle, mixin, requestAnim };"],"sourceRoot":"/source/"}